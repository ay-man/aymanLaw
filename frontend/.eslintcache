[{"/repos/muckraker/frontend/src/index.js":"1","/repos/muckraker/frontend/src/App.js":"2","/repos/muckraker/frontend/src/reportWebVitals.js":"3","/repos/muckraker/frontend/src/components/Homepage.js":"4","/repos/muckraker/frontend/src/components/Layout.js":"5","/repos/muckraker/frontend/src/components/Dashboard.js":"6","/repos/muckraker/frontend/src/components/Introduction.js":"7","/repos/muckraker/frontend/src/components/Spacer.js":"8","/repos/muckraker/frontend/src/components/LookupLegislators.js":"9","/repos/muckraker/frontend/src/components/TabMenu.js":"10","/repos/muckraker/frontend/src/components/LookupModule.js":"11","/repos/muckraker/frontend/src/components/StackedBarChart.js":"12","/repos/muckraker/frontend/src/components/PieChart.js":"13","/repos/muckraker/frontend/src/components/VoteSearchBar.js":"14","/repos/muckraker/frontend/src/data/prepare_data.js":"15","/repos/muckraker/frontend/src/components/VoteSummary.js":"16"},{"size":500,"mtime":1703523143953,"results":"17","hashOfConfig":"18"},{"size":193,"mtime":1703523143953,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1703523143953,"results":"20","hashOfConfig":"18"},{"size":2480,"mtime":1703531929081,"results":"21","hashOfConfig":"18"},{"size":4878,"mtime":1703533810590,"results":"22","hashOfConfig":"18"},{"size":401,"mtime":1703523143953,"results":"23","hashOfConfig":"18"},{"size":5495,"mtime":1703542090410,"results":"24","hashOfConfig":"18"},{"size":542,"mtime":1703523143953,"results":"25","hashOfConfig":"18"},{"size":520,"mtime":1703523143953,"results":"26","hashOfConfig":"18"},{"size":8930,"mtime":1703523143953,"results":"27","hashOfConfig":"18"},{"size":4157,"mtime":1703523143953,"results":"28","hashOfConfig":"18"},{"size":1931,"mtime":1703523143953,"results":"29","hashOfConfig":"18"},{"size":3087,"mtime":1703523143953,"results":"30","hashOfConfig":"18"},{"size":3455,"mtime":1703523143953,"results":"31","hashOfConfig":"18"},{"size":6459,"mtime":1703523143953,"results":"32","hashOfConfig":"18"},{"size":1678,"mtime":1703523143953,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1zqry7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/repos/muckraker/frontend/src/index.js",[],["74","75"],"/repos/muckraker/frontend/src/App.js",["76"],"import logo from './logo.svg';\nimport './App.css';\nimport Homepage from '../src/components/Homepage.js'\n\nfunction App() {\n  return (\n    <Homepage>\n\n    </Homepage>\n  );\n}\n\nexport default App;\n","/repos/muckraker/frontend/src/reportWebVitals.js",[],"/repos/muckraker/frontend/src/components/Homepage.js",[],"/repos/muckraker/frontend/src/components/Layout.js",[],"/repos/muckraker/frontend/src/components/Dashboard.js",[],"/repos/muckraker/frontend/src/components/Introduction.js",["77","78"],"/repos/muckraker/frontend/src/components/Spacer.js",["79","80"],"\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  \n  spacer: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n    width: '100%'\n  },\n  \n}));\n\nexport default function Spacer() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div className={classes.spacer} />\n  );\n}","/repos/muckraker/frontend/src/components/LookupLegislators.js",[],"/repos/muckraker/frontend/src/components/TabMenu.js",["81","82","83","84","85"],"import React, { useState, useEffect  } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './TabMenu.css'\nimport Spacer from './Spacer.js'\nimport {generateLegislatorData, generateVotesData} from '../data/prepare_data.js'\nimport StackedBarChart from './StackedBarChart.js'\nimport PieChart from './PieChart.js'\nimport VoteSearchBar from './VoteSearchBar.js'\nimport VoteSummary from './VoteSummary.js'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n    className=\"boxDiv\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  selector:{\n    with:'100%',\n    padding :0,\n  },\n  selection:{\n  },\n  selectionText:{\n\n  },\n}));\n\nexport default function TabMenu(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [currVoteHouse, setCurrVoteHouse] = React.useState(0);\n  const [currVoteSenate, setCurrVoteSenate] = React.useState(0);\n  const [senators, setSenators] = React.useState(null);\n  const [representatives, setRepresentatives] = React.useState(null);\n  const [senateVotes, setSenateVotes] = React.useState(null);\n  const [houseVotes, setHouseVotes] = React.useState(null);\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleCurrVoteHouse = (event, newValue) => {\n    setCurrVoteHouse(event.target.value);\n  };\n\n  const handleCurrVoteSenate = (event, newValue) => {\n    setCurrVoteSenate(event.target.value);\n  };\n\n  \n  function createLegendHints(voteObject, index) {\n    if(voteObject === null || voteObject === undefined)\n    {\n      return;\n    }\n\n    let vote = generateVotesData(voteObject)[index];\n\n    return Object.keys(vote.getLegendHints()).map((key, index) => \n           key + \" - \" + vote.getLegendHints()[key].replace(\"_\", \" \") + \n           (index === (Object.keys(vote.getLegendHints()).length-1) ? \"\" : \", \"\n    )); \n  }\n\n  function createPieChart(voteObject, index){\n    if(voteObject === null || voteObject === undefined)\n    {\n      return;\n    }\n\n    let vote = generateVotesData(voteObject)[index];\n\n    return (\n      <PieChart data={vote} />\n    );\n  }\n\n  function createStackedBarChart(voteObject, index){\n    if(voteObject === null || voteObject === undefined)\n    {\n      return;\n    }\n\n    let vote = generateVotesData(voteObject)[index];\n\n    return (\n      <StackedBarChart data={vote} />\n    );\n  }\n\n  function createVoteSummary(voteObject, index){\n    if(voteObject === null || voteObject === undefined)\n    {\n      return;\n    }\n\n    let vote = generateVotesData(voteObject)[index].getSummaryData();\n\n    return (\n      <VoteSummary data={vote} />\n    );\n  }\n\n  function createVoteSearchBar(voteObject, membersObject, index, memberType){\n    if((voteObject === null || voteObject === undefined) \n        || (membersObject === null || membersObject === undefined)){\n      return;\n    }\n\n    let votes = voteObject[\"results\"][\"votes\"]\n    let members = generateLegislatorData(membersObject);\n    let url = generateVotesData(voteObject)[index].getSourceURL();\n\n    return (\n      <VoteSearchBar members={members} type={memberType} chamberVotes={votes} source={url}/>\n    );\n  }\n\n  function createMenuItems(voteObject){\n    if(voteObject === null || voteObject === undefined)\n    {\n      return;\n    }\n\n    let votes = generateVotesData(voteObject);\n\n    return (\n      votes.map((obj, index) =>\n        <MenuItem className={classes.selection} value={index} key={index}>\n          {votes[index].getSelectBarText()}\n        </MenuItem>\n       )\n    );\n  }\n\n  useEffect(() => {\n    setSenators(props.data[\"membersSenate\"]);\n    setRepresentatives(props.data[\"membersHouse\"]);\n    setSenateVotes(props.data[\"votesSenate\"]);\n    setHouseVotes(props.data[\"votesHouse\"]);\n  },[props?.data]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"House\" {...a11yProps(0)} />\n          <Tab label=\"Senate\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <Spacer />\n      <TabPanel value={value} index={0}>\n      <Grid \n        container\n        direction=\"row\"\n        alignItems=\"center\"\n      >\n        <InputLabel>Vote ID: </InputLabel>\n        <Select\n            labelId=\"demo-simple-select\"\n            className={classes.selector}\n            onChange={handleCurrVoteHouse}\n            value={currVoteHouse}\n        >\n\n          {createMenuItems(props.data[\"votesHouse\"])}\n        </Select>\n      </Grid>\n      <Spacer />\n      <div className=\"wrap\">\n        <div className=\"one\">\n          {createVoteSummary(props.data[\"votesHouse\"], currVoteHouse)}\n        </div>\n        <div className=\"three\"></div>\n        <div className=\"two\">\n        <Typography variant=\"h5\" align=\"center\">\n            Vote count\n        </Typography>\n        <Typography variant=\"body1\" align=\"center\">\n          { createLegendHints(props.data[\"votesHouse\"], currVoteHouse) }\n        </Typography>\n          { createPieChart(props.data[\"votesHouse\"], currVoteHouse) }\n        </div>\n      </div>\n      <Spacer />\n      <div className=\"wrap\">\n        <div className=\"one\">\n          {createVoteSearchBar(props.data[\"votesHouse\"], props.data[\"membersHouse\"], currVoteHouse, \"Representative\")}\n        </div>\n        <div className=\"three\"></div>\n        <div className=\"two\">\n          <Typography variant=\"h5\" align=\"center\">\n            Vote breakdown by party\n          </Typography>\n          <Typography variant=\"body1\" align=\"center\">\n            { createLegendHints(props.data[\"votesHouse\"], currVoteHouse) }\n          </Typography>\n          { createStackedBarChart(props.data[\"votesHouse\"], currVoteHouse) }\n        </div>\n      </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Grid \n          container\n          direction=\"row\"\n          alignItems=\"center\"\n        >\n          <InputLabel>Vote ID: </InputLabel>\n          <Select\n              labelId=\"demo-simple-select-label\"\n              className={classes.selector}\n              label=\"Hello\"\n              onChange={handleCurrVoteSenate}\n              value={currVoteSenate}\n          >\n            {createMenuItems(props.data[\"votesSenate\"])}\n          </Select>\n        </Grid>\n        <Spacer />\n        <div className=\"wrap\">\n          <div className=\"one\">\n            {createVoteSummary(props.data[\"votesSenate\"], currVoteSenate)}\n          </div>\n          <div className=\"three\"></div>\n          <div className=\"two\">\n          <Typography variant=\"h5\" align=\"center\">\n            Vote count\n          </Typography>\n          <Typography variant=\"body1\" align=\"center\">\n            { createLegendHints(props.data[\"votesSenate\"], currVoteSenate) }\n          </Typography>\n          { createPieChart(props.data[\"votesSenate\"], currVoteSenate) }\n          </div>\n        </div>\n        <Spacer />\n        <div className=\"wrap\">\n          <div className=\"one\">\n            {createVoteSearchBar(props.data[\"votesSenate\"], props.data[\"membersSenate\"], currVoteSenate, \"Senator\")}\n          </div>\n          <div className=\"three\"></div>\n          <div className=\"two\">\n            <Typography variant=\"h5\" align=\"center\">\n              Vote breakdown by party\n            </Typography>\n            <Typography variant=\"body1\" align=\"center\">\n              { createLegendHints(props.data[\"votesSenate\"], currVoteSenate) }\n            </Typography>\n            { createStackedBarChart(props.data[\"votesSenate\"], currVoteSenate) }\n          </div>\n        </div>\n      </TabPanel>\n      <Spacer />\n      <Spacer />\n    </div>\n  );\n}\n","/repos/muckraker/frontend/src/components/LookupModule.js",["86","87"],"import React, { useLayoutEffect, useState, useEffect  } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Spacer from './Spacer.js'\nimport VoteSummary from './VoteSummary.js'\nimport {generateLegislatorData} from '../data/prepare_data.js'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  activeMember: {\n    width: '100%',\n    display: 'block',\n  },\n  inactiveMember: {\n    display:'none',\n  },\n  centeredImage: {\n    display: 'block',\n    margin: '0 auto',\n  }\n\n}));\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      let width, height = 0;\n      if(window.innerWidth >=500){\n        width = 450;\n        height = 550;\n      }\n\n      else if(window.innerWidth < 500){\n        width = 225;\n        height = 275;\n      }\n\n      setSize([width, height]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\n\nexport default function LookupModule(props){\n\n  const [currMemberID, setCurrMemberID] = React.useState(-1);\n  const [currMemberName, setCurrMemberName] = React.useState(\"\");\n  const [currMember, setCurrMember] = React.useState(null);\n  const [width, height] = useWindowSize();\n\n  const handleCurrMemberID = (event, value) => {\n    var newMember = value === null ? \"\" : value.id;\n    setCurrMemberID(newMember);\n\n    var newMemberName = value === null ? \"\" : value.name;\n    setCurrMemberName(newMemberName);\n    setCurrMember(value);\n  };\n\n  function setStatesAfterDataHasLoaded(){\n    if( (props.data[\"membersHouse\"] === null || props.data[\"membersHouse\"] === undefined)\n        || (props.data[\"membersSenate\"] === null || props.data[\"membersSenate\"] === undefined))\n    {\n      return;\n    }\n\n    let legislators = generateLegislatorData(props.data[\"membersHouse\"]);\n    let senators = generateLegislatorData(props.data[\"membersSenate\"]);\n    legislators.concat(senators);\n\n    setCurrMemberID(legislators[0].id)\n    setCurrMemberName(legislators[0].name)\n    setCurrMember(legislators[0]);\n\n  }\n\n  function createLegislatorsAutoComplete(){\n    if( (props.data[\"membersHouse\"] === null || props.data[\"membersHouse\"] === undefined)\n        || (props.data[\"membersSenate\"] === null || props.data[\"membersSenate\"] === undefined))\n    {\n      return;\n    }\n\n    let legislators = generateLegislatorData(props.data[\"membersHouse\"]);\n    let senators = generateLegislatorData(props.data[\"membersSenate\"]);\n    legislators.concat(senators);\n\n    return(\n      <Autocomplete\n        options={legislators}\n        getOptionLabel={(option) => option.name}\n        renderInput={(params) => <TextField {...params} label=\"Legislator\" variant=\"outlined\" />}\n        onChange={handleCurrMemberID}\n        disableClearable={true}\n      />\n    );\n  }\n\n  useEffect(() => {\n    setStatesAfterDataHasLoaded();\n  },[props?.data]);\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" align='center'> Use the search bar below to see the voting profile of a specific legislator</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          {createLegislatorsAutoComplete()}\n        </Grid>\n      </Grid>\n      <Grid container ></Grid>\n      <Spacer />\n      <div>\n        <Typography variant=\"h5\" align='center'>{currMemberName}</Typography>\n        {currMember !== null ?   <img className={classes.centeredImage} src={\"https://theunitedstates.io/images/congress/\"+ width+\"x\"+ height +\"/\"+ currMemberID +\".jpg\"} align=\"center\"/> : <div></div>}\n        {currMember !== null ? <div style={{width: width + \"px\", display: 'block', margin: '0 auto'}}><VoteSummary data={currMember}/></div> : <div></div>}\n      </div>\n    </div>\n  );\n\n}","/repos/muckraker/frontend/src/components/StackedBarChart.js",[],"/repos/muckraker/frontend/src/components/PieChart.js",[],"/repos/muckraker/frontend/src/components/VoteSearchBar.js",["88"],"import React, { useState, useEffect  } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function VoteSearchBar(props) {\n  \n  const [currMemberID, setCurrMemberID] = React.useState(\"\");\n  const [currMemberName, setCurrMemberName] = React.useState(\"\");\n  const [voteMessage, setVoteMessage] = React.useState(\"\");\n  const [members, setMembers] = React.useState(null);\n\n  const handleCurrMemberID = (event, value) => {\n    var newMember = value === null ? \"\" : value.id;\n    setCurrMemberID(newMember);\n\n    var newMemberName = value === null ? \"\" : value.name;\n    setCurrMemberName(newMemberName);\n  };\n\n  const handleVoteMessage = () => {\n    var url = require('./../data/key.json');\n    url = url['url']+ '/getMemberRecentVotes?id='+ currMemberID;\n    fetch(url)\n    .then(async (response) => {\n      const data = await response.json();\n      setVoteMessage(getMemberVoteResult(data));\n    });\n  };\n\n  const clearVoteMessage = () => {\n    setVoteMessage(\"\");\n  };\n\n  useEffect(() => {\n    setMembers(props?.members)\n  },[props?.members]);\n\n  function getMemberVoteResult(memberObject) {\n    if(currMemberID === \"\"){\n      return \"Please select a \" + props.type + \" to see how they voted.\";\n    }\n    var memberVotes = memberObject[\"results\"][0][\"votes\"];\n    for(let vote of memberVotes){\n      if(props.source === vote.vote_uri){\n        return currMemberName + \" voted: \" + vote.position;\n      }\n    }\n    return \"Not Found\"\n  }\n  \n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" align='center'> Use the search bar below to see how a specific {props.type} voted.</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          {members !== undefined ? \n            <Autocomplete\n            options={props.members}\n            getOptionLabel={(option) => option.name}\n            renderInput={(params) => <TextField {...params} label={props.type} variant=\"outlined\" />}\n            onChange={handleCurrMemberID}\n            />\n            :\n            <span></span>\n          }\n          \n        </Grid>\n      </Grid>\n      <Grid container >\n      <Grid item xs={1}>\n        </Grid>\n        <Grid item xs={5}>\n          <Button variant=\"contained\" color=\"primary\" fullWidth={true} onClick={handleVoteMessage}>\n            Search\n          </Button>\n        </Grid>\n        <Grid item xs={5}>\n          <Button variant=\"contained\" color=\"secondary\" fullWidth={true} onClick={clearVoteMessage}>\n            Clear\n          </Button>\n        </Grid>\n        <Grid item xs={1}>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" align='center'>{voteMessage}</Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","/repos/muckraker/frontend/src/data/prepare_data.js",["89","90","91","92","93","94","95","96","97","98"],"export class VoteData {\n  constructor(voteObject) {\n      this.voteObject = voteObject;\n  }\n\n  getPartyKeys() {\n    return [\"independent\", \"republican\", \"democratic\"];\n  }\n\n  getFriendlyPartyKeys(){\n    var keys = this.getPartyKeys();\n    for(var i = 0; i <keys.length; i++){\n      keys[i] = keys[i].toUpperCase();\n    }\n    return keys;\n  }\n\n  getVoteTypeKeys() {\n    return Object.keys(this.voteObject[\"total\"]);\n  }\n\n  hasKeyAlready(obj, key) {\n    return obj[key] === undefined ? false : true;\n  }\n\n  transformToAbbreviatedKey(key){\n    var wordsSeparetedByUnderscore = key.split(\"_\");\n    var wordsSeparetedBySpace = key.split(\" \");\n    var newKey = \"\";\n\n    if(wordsSeparetedByUnderscore.length === 2 ){\n      newKey += (wordsSeparetedByUnderscore[0][0] + wordsSeparetedByUnderscore[1][0]);\n    }\n\n    else if(wordsSeparetedBySpace.length === 2 ){\n      newKey += (wordsSeparetedBySpace[0][0] + wordsSeparetedBySpace[1][0]);\n    }\n\n    else {\n      newKey += key[0][0];\n    }\n    return newKey.toUpperCase();\n  }\n\n  getBarData() {\n    var chartData = new Array();\n    var existingVoteKeys = new Object();\n\n    for(let key of this.getVoteTypeKeys()){\n      var dataElement = new Object();\n      var voteKeyForNewElement = this.transformToAbbreviatedKey(key);\n      var hasKey = voteKeyForNewElement in existingVoteKeys;\n      if(hasKey){\n        voteKeyForNewElement+= key[1].toUpperCase();\n      }\n      dataElement[\"vote\"] = voteKeyForNewElement;\n      existingVoteKeys[voteKeyForNewElement] = 1;\n      for(let party of this.getPartyKeys()){\n        var numVotes = this.voteObject[party][key];  \n        \n        dataElement[party.toUpperCase()] = numVotes === undefined ? 0 : numVotes;\n      }\n      chartData.push(dataElement);\n    }\n    return chartData;\n  }\n\n  getPieData() {\n    var chartData = new Array();\n    var existingVoteKeys = new Object();\n\n    for(let key of  this.getVoteTypeKeys()){\n      var dataElement = new Object();\n      var newKey = this.transformToAbbreviatedKey(key);\n      var hasKey = newKey in existingVoteKeys;\n      if(hasKey){\n        newKey += key[1].toUpperCase();\n      }\n      dataElement[\"id\"] = newKey;\n      dataElement[\"label\"] =  dataElement[\"id\"];\n      existingVoteKeys[newKey] = 1;\n      \n      var totalVotes = this.voteObject[\"total\"];\n      \n      dataElement[\"value\"] = totalVotes[key]\n\n      chartData.push(dataElement);\n    }\n    return chartData;\n  }\n\n  getLegendHints() {\n    var keys = this.getVoteTypeKeys();\n\n    var mapLegendHints = new Object();\n\n    for(var i = 0; i < keys.length ; i++ ){\n      var newKey = this.transformToAbbreviatedKey(keys[i]);\n      var hasKey = newKey in mapLegendHints;\n      if(hasKey){\n        newKey += keys[i][1].toUpperCase();\n      }\n      mapLegendHints[newKey] = keys[i];\n    }\n\n    return mapLegendHints;\n  }\n  \n  getSourceURL() {\n    return this.voteObject.vote_uri;\n  }\n\n  getSelectBarText() {\n    var id =\"\";\n    if(this.voteObject[\"bill\"] !== undefined && Object.keys(this.voteObject[\"bill\"]).length !== 0 ){\n      if(this.voteObject[\"bill\"][\"bill_id\"] !== undefined){\n        id = this.voteObject[\"bill\"][\"bill_id\"] + \", \";\n      }\n    }\n    else if(this.voteObject[\"nomination\"] !== undefined){\n      if(this.voteObject[\"nomination\"][\"nomination_id\"] !== undefined){\n        id = this.voteObject[\"nomination\"][\"nomination_id\"] + \", \";\n      }\n    }\n\n    id += this.voteObject[\"date\"] + \" \" + this.voteObject[\"time\"];\n    return id;\n  }\n\n  getSummaryData() {\n    \n    let summary = {\n      \"bill_id\": this.voteObject[\"bill\"][\"bill_id\"],\n      \"nomination_id\":  \"nomination\" in this.voteObject ? this.voteObject[\"nomination\"][\"nomination_id\" ]: '',\n      \"date\": this.voteObject[\"date\"],\n      \"time\": this.voteObject[\"time\"],\n      \"description\": this.voteObject[\"description\"],\n      \"question\": this.voteObject[\"question\"],\n      \"question_text\": this.voteObject[\"question_text\"],\n      \"latest_action\": this.voteObject[\"bill\"][\"latest_action\"],\n      \"vote_type\": this.voteObject[\"vote_type\"],\n      \"result\": this.voteObject[\"result\"],\n      \"source\": this.voteObject[\"source\"]\n    };\n    return summary;\n  }\n  \n}\n\nexport class MemberData {\n  constructor(memberObject) {\n      this.memberObject = memberObject;\n  }\n\n  getMemberData() {\n\n    var member= new Object();\n    var middleName = this.memberObject.middle_name === null ? \" \" : (\" \" + this.memberObject.middle_name + \" \");\n    member[\"name\"] = this.memberObject.first_name +  middleName +  this.memberObject.last_name;\n    member[\"id\"] = this.memberObject.id;\n    member[\"title\"] = this.memberObject.title;\n    member[\"date_of_birth\"] = this.memberObject.date_of_birth;\n    member[\"gender\"] = this.memberObject.gender;\n    member[\"party\"] = this.memberObject.party;\n    member[\"state\"] = this.memberObject.state;\n    member[\"district\"] = this.memberObject.district;\n    member[\"next_election\"] = this.memberObject.next_election;\n    member[\"missed_votes\"] = this.memberObject.missed_votes;\n    member[\"total_votes\"] = this.memberObject.total_votes;\n    member[\"missed_vote_pct\"] = this.memberObject.missed_vote_pct;\n    member[\"votes_with_party_pct\"] = this.memberObject.votes_with_party_pct;\n    member[\"votes_against_party_pct\"] = this.memberObject.votes_against_party_pct;\n    member[\"next_election\"] = this.memberObject.next_election;\n    member[\"office\"] = this.memberObject.office;\n    member[\"phone\"] = this.memberObject.phone;\n    member[\"twitter_account\"] = this.memberObject.twitter_account;\n    member[\"facebook_account\"] = this.memberObject.facebook_account;\n    member[\"youtube_account\"] = this.memberObject.youtube_account;\n    return member;\n  }\n  \n}\n\nfunction generateLegislatorData(legislatorObject){\n  if(legislatorObject === null || legislatorObject === undefined)\n  {\n    return;\n  }\n\n  let legislators = legislatorObject[\"results\"][0][\"members\"];\n  let legislatorsMemberData = new Array(); \n  for(let index of legislators) {\n    let legislator = new MemberData(index);\n    legislatorsMemberData.push(legislator.getMemberData());\n  }\n  return legislatorsMemberData;\n}\n\nfunction generateVotesData(votesObject){\n  if(votesObject === null || votesObject === undefined)\n  {\n    return;\n  }\n  \n  let votes = votesObject[\"results\"][\"votes\"];\n  let votesData = new Array(); \n  for (let index of Object.keys(votes) ){\n    let voteTemp =  new VoteData(votes[index]);\n    votesData.push(voteTemp);\n  }\n  return votesData;\n}\n\nexport {generateLegislatorData}\nexport {generateVotesData}\n","/repos/muckraker/frontend/src/components/VoteSummary.js",["99","100"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  voteWrapper: {\n    border: '1px solid #3f51b5',\n  },\n  title: {\n    textAlign: 'center',\n    backgroundColor: '#3f51b5'\n  },\n  voteSectionTitle: {\n    width: '100%',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    backgroundColor: '#3f51b5',\n    color : '#fff',\n    overflowWrap: 'break-word',\n    wordWrap: 'break-word',\n  },\n  voteSectionContent: {\n    width: '98%',\n    marginLeft: '1%',\n    overflowWrap: 'break-word',\n    wordWrap: 'break-word',\n  },\n}));\n\nexport default function VoteSummary(props) {\n  \n  function getFormattedObject() {\n\n    var newObject = new Object();\n    for(let key of Object.keys(props.data)){\n      \n      if (typeof props.data[key] === 'string'){\n        if(props.data[key].length === 0 ){\n          continue;\n        }\n      }\n\n      if(props.data[key] === null){\n        continue;\n      }\n\n      if(props.data[key] === undefined){\n        continue;\n      }\n      \n      newObject[key.replace(/_/g, \" \").toUpperCase()] = props.data[key];\n    }\n    return newObject;\n  }\n\n  function getRows(){\n    var items = new Array();\n    let summary = getFormattedObject();\n\n    for(var key in summary){\n      items.push(key);\n      items.push(summary[key]);\n    }\n    return items;\n  }\n  \n  const classes = useStyles();\n\n  return (\n    <div className={classes.voteWrapper}>\n      \n\n        {getRows().map((row, index) => (\n            <div key={index} className={index % 2 === 0 ? classes.voteSectionTitle : classes.voteSectionContent}>\n              { row }\n            </div>\n        ))\n        }\n      \n    </div>\n  );\n}",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":12},{"ruleId":"109","severity":1,"message":"110","line":22,"column":6,"nodeType":"111","endLine":22,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":32,"column":6,"nodeType":"111","endLine":32,"endColumn":12,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":6,"column":7,"nodeType":"107","messageId":"108","endLine":6,"endColumn":18},{"ruleId":"105","severity":1,"message":"116","line":26,"column":9,"nodeType":"107","messageId":"108","endLine":26,"endColumn":14},{"ruleId":"105","severity":1,"message":"117","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"118","line":76,"column":10,"nodeType":"107","messageId":"108","endLine":76,"endColumn":18},{"ruleId":"105","severity":1,"message":"119","line":77,"column":10,"nodeType":"107","messageId":"108","endLine":77,"endColumn":25},{"ruleId":"105","severity":1,"message":"120","line":78,"column":10,"nodeType":"107","messageId":"108","endLine":78,"endColumn":21},{"ruleId":"105","severity":1,"message":"121","line":79,"column":10,"nodeType":"107","messageId":"108","endLine":79,"endColumn":20},{"ruleId":"109","severity":1,"message":"122","line":111,"column":5,"nodeType":"111","endLine":111,"endColumn":18,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":130,"column":34,"nodeType":"126","endLine":130,"endColumn":187},{"ruleId":"105","severity":1,"message":"117","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":46,"column":21,"nodeType":"129","messageId":"130","endLine":46,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":47,"column":28,"nodeType":"129","messageId":"130","endLine":47,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":50,"column":25,"nodeType":"129","messageId":"130","endLine":50,"endColumn":37},{"ruleId":"127","severity":1,"message":"128","line":69,"column":21,"nodeType":"129","messageId":"130","endLine":69,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":70,"column":28,"nodeType":"129","messageId":"130","endLine":70,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":73,"column":25,"nodeType":"129","messageId":"130","endLine":73,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":95,"column":26,"nodeType":"129","messageId":"130","endLine":95,"endColumn":38},{"ruleId":"131","severity":1,"message":"132","line":157,"column":17,"nodeType":"129","messageId":"130","endLine":157,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":191,"column":31,"nodeType":"129","messageId":"130","endLine":191,"endColumn":42},{"ruleId":"127","severity":1,"message":"128","line":206,"column":19,"nodeType":"129","messageId":"130","endLine":206,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":33,"column":21,"nodeType":"129","messageId":"130","endLine":33,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":56,"column":17,"nodeType":"129","messageId":"130","endLine":56,"endColumn":28},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createButtonListener'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'initHammer'. Either include it or remove the dependency array.",["136"],"'drawerWidth' is assigned a value but never used.","'theme' is assigned a value but never used.","'useState' is defined but never used.","'senators' is assigned a value but never used.","'representatives' is assigned a value but never used.","'senateVotes' is assigned a value but never used.","'houseVotes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setStatesAfterDataHasLoaded'. Either include it or remove the dependency array.",["137"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-new-object","The object literal notation {} is preferrable.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [createButtonListener]",{"range":"144","text":"145"},"Update the dependencies array to be: [data, initHammer]",{"range":"146","text":"147"},"Update the dependencies array to be: [props.data, setStatesAfterDataHasLoaded]",{"range":"148","text":"149"},[813,815],"[createButtonListener]",[1066,1072],"[data, initHammer]",[3166,3179],"[props.data, setStatesAfterDataHasLoaded]"]